{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\Azubi shop\\\\meshack work\\\\Azubi-ecommerce\\\\src\\\\Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { toast } from 'react-toastify';\n//import { CartState } from './context/CartContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Register() {\n  _s();\n  // State to hold user's email and password\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [password2, setPassword2] = useState('');\n\n  // Hook to navigate to other routes\n  const navigate = useNavigate();\n\n  // Handle submit function that is called when the form is submitted\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    // Create user data object with email and password\n    const userData = {\n      email,\n      password\n    };\n\n    // Check if the email and password fields are empty\n    if (!email || !password || !password2) {\n      toast.error('Field Required');\n    } else if (password !== password2) {\n      // Check if passwords match\n      toast.error('Password do not match');\n    } else {\n      // Save user data in local storage and navigate to login page\n      window.localStorage.setItem('user', JSON.stringify(userData));\n      navigate('/login');\n      toast.success('Account created successfully');\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Create an account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          name: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          name: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"confirmPassword\",\n          children: \"Confirm Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"Password\",\n          id: \"confirmPassword\",\n          name: \"confirmPassword\",\n          value: password2,\n          onChange: e => setPassword2(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-input\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-block\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(Register, \"+vqwsN6tuQeMgYUMFIc/TMdldRU=\", false, function () {\n  return [useNavigate];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","useNavigate","toast","Register","email","setEmail","password","setPassword","password2","setPassword2","navigate","handleSubmit","e","preventDefault","userData","error","window","localStorage","setItem","JSON","stringify","success","target","value"],"sources":["C:/Users/DELL/Desktop/Azubi shop/meshack work/Azubi-ecommerce/src/Register.js"],"sourcesContent":["import React,{useState} from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {toast} from 'react-toastify';\r\n//import { CartState } from './context/CartContext';\r\n\r\nfunction Register() {\r\n  // State to hold user's email and password\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [password2, setPassword2] = useState('')\r\n  \r\n  // Hook to navigate to other routes\r\n  const navigate = useNavigate()\r\n\r\n  // Handle submit function that is called when the form is submitted\r\n  function handleSubmit(e){\r\n    e.preventDefault()\r\n\r\n    // Create user data object with email and password\r\n    const userData = {\r\n      email,\r\n      password\r\n    }\r\n\r\n    // Check if the email and password fields are empty\r\n    if(!email || !password || !password2){\r\n      toast.error('Field Required')\r\n    } else if(password !== password2){ // Check if passwords match\r\n      toast.error('Password do not match')\r\n    } else { // Save user data in local storage and navigate to login page\r\n      window.localStorage.setItem('user', JSON.stringify(userData));\r\n      navigate('/login')\r\n      toast.success('Account created successfully')\r\n    }  \r\n  }\r\n\r\n  return (\r\n    <div className='form-container'>\r\n      <h1>Create an account</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        {/* Email field */}\r\n        <div className='form-input'>\r\n          <label htmlFor='email'>Email</label>\r\n          <input type='email'\r\n            id='email' \r\n            name='email' \r\n            value={email}\r\n            onChange={(e)=>setEmail(e.target.value)} />\r\n        </div>\r\n        {/* Password field */}\r\n        <div className='form-input'>\r\n          <label htmlFor='password'>Password</label>\r\n          <input type='password' \r\n            id='password'\r\n            name='password'\r\n            value={password}\r\n            onChange={(e)=>setPassword(e.target.value)}\r\n          />\r\n        </div>\r\n        {/* Confirm password field */}\r\n        <div className='form-input'>\r\n          <label htmlFor='confirmPassword'>Confirm Password</label>\r\n          <input type='Password'\r\n            id='confirmPassword'\r\n            name='confirmPassword'\r\n            value={password2}\r\n            onChange={(e)=>setPassword2(e.target.value)}\r\n          />\r\n        </div>\r\n        {/* Submit button */}\r\n        <div className='form-input'>\r\n          <button className='btn btn-block'>Submit</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Register;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}